<%= form_for(@object_rule) do |f| %>
  <% if @object_rule.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@object_rule.errors.count, "error") %> prohibited this object_rule from being saved:</h2>

      <ul>
      <% @object_rule.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="field">
    <%= f.label :extract_object, "ActionKit Table" %>
    <%= f.text_field :extract_object, class: "radius" %>
  </div>
  <div class="field">
    <%= f.label :load_object, "SalesForce Object" %>
    <%= f.text_field :load_object, class: "radius" %>
  </div>
  <div class="field">
      <%= f.label :custom_from_clause %>
      <%= f.text_area :custom_from_clause, class: "radius" %>
    </div>
  <input type="hidden" value="true" />
  <div class="actions">
    <%= f.submit "Save", class: "radius button" %>
  </div>
<% end %>

<script type="text/javascript">

  var substringMatcher = function(strs) {
    return function findMatches(q, cb) {
      var matches, substrRegex;
   
      // an array that will be populated with substring matches
      matches = [];
   
      // regex used to determine if a string contains the substring `q`
      substrRegex = new RegExp(q, 'i');
   
      // iterate through the pool of strings and for any string that
      // contains the substring `q`, add it to the `matches` array
      $.each(strs, function(i, str) {
        if (substrRegex.test(str)) {
          // the typeahead jQuery plugin expects suggestions to a
          // JavaScript object, refer to typeahead docs for more info
          matches.push({ value: str });
        }
      });
   
      cb(matches);
    };
  };


  $('#object_rule_extract_object').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
  {
    name: 'ActionKitTables',
    displayKey: 'value',
    source: substringMatcher(gon.actionKitTables)
  });
  $('#object_rule_load_object').typeahead({
    hint: true,
    highlight: true,
    minLength: 1
  },
  {
    name: 'SalesForceObjects',
    displayKey: 'value',
    source: substringMatcher(gon.salesForceObjects)
  });
</script>